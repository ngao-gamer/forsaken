getgenv().Players = game:GetService("Players")
getgenv().playerData = game:GetService("Players").LocalPlayer:WaitForChild("PlayerData")
getgenv().ReplicatedStorage = game:GetService("ReplicatedStorage")
getgenv().RunService = game:GetService("RunService")
getgenv().MarketplaceService = game:GetService("MarketplaceService")
getgenv().RemoteEvent = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
getgenv().TweenService = game:GetService("TweenService")
getgenv().PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
local Humanoid, Animator
getgenv().player = Players.LocalPlayer
getgenv().purchasedEmotesFolder = playerData:WaitForChild("Purchased"):WaitForChild("Emotes")
getgenv().Remote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")

-- ===================================
-- == KHỞI TẠO FLUENT UI ĐÃ FIX ==
-- ===================================

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
   Title = "Purium Hub | by ngao-gamer",
   ThemeIndex = 3, -- 3 là màu xanh mặc định (Cyan)
   AccentColor = "Cyan",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "Purium",
      FileName = "Purium Hub"
   },
   MinimizeKey = Enum.KeyCode.End -- Dùng End để ẩn/hiện GUI
})

-- Tạo các Tab với Icon ID CHUẨN của Fluent UI (ĐÃ FIX LỖI CÚ PHÁP)
local CombatTab = Window:AddTab("Combat", 4483750058) -- Icon: sword
local GeneratorsTab = Window:AddTab("Generators", 6147690616) -- Icon: gear (hoặc máy móc)
local ESPTab = Window:AddTab("ESP", 6147690637) -- Icon: eye/scan
local StaminaSetTab = Window:AddTab("Stamina Settings", 6147690753) -- Icon: feet/run
local AimbotTab = Window:AddTab("Aimbot", 4483750031) -- Icon: target/crosshair
local MiscsTab = Window:AddTab("Misc", 6147690554) -- Icon: cogs
local AntiSlowsTab = Window:AddTab("Anti Slow", 6147690554) -- Icon: cogs
local AchieveTab = Window:AddTab("Achievements", 6147690614) -- Icon: medal


-- ===================================
-- == LOGIC: AUTO GENERATOR ==
-- ===================================

local genEnabled = false
local genInterval = 1.25
local re = true
local Check = false
local lt = 0

GeneratorsTab:AddSection("Auto Generator")

local autoGenToggle = GeneratorsTab:AddToggle("AutoGenToggle", {
	Title = "Auto Do Generator",
	Default = genEnabled,
}):OnChange(function(Value)
	genEnabled = Value
end)

local genIntervalSlider = GeneratorsTab:AddSlider("GenIntervalSlider", {
	Title = "Do Generator Interval (Seconds)",
	Range = {1, 15},
	Increment = 0.25,
	Suffix = "s",
	Default = genInterval,
}):OnChange(function(Value)
	genInterval = Value
end)

-- Hook RF/RE (Giữ nguyên logic gốc)
local Old
Old = hookmetamethod(game, "__namecall", function(Self, ...)
	local Args = { ... }
	local Method = getnamecallmethod()
	if not checkcaller() and typeof(Self) == "Instance" then
		if Method == "InvokeServer" or Method == "FireServer" then
			if tostring(Self) == "RF" then
				if Args[1] == "enter" then
					Check = true
				elseif Args[1] == "leave" then
					Check = false
				end
			elseif tostring(Self) == "RE" then
				lt = os.clock()
			end
		end
	end
	return Old(Self, unpack(Args))
end)

-- Auto Generator Loop
game:GetService("RunService").Stepped:Connect(function()
	if genEnabled and Check and re and os.clock() - lt >= genInterval then
		re = false
		task.spawn(function()
			for _, gen in ipairs(workspace.Map.Ingame:WaitForChild("Map"):GetChildren()) do
				if gen.Name == "Generator" and gen:FindFirstChild("Remotes") then
					gen.Remotes.RE:FireServer()
				end
			end
			task.wait(genInterval)
			re = true
		end)
	end
end)

-- ===================================
-- == LOGIC & UI: ESP ==
-- ===================================

-- Config ESP
local killersESPToggle = false
local survivorsESPToggle = false
local itemESPEnabled = false
local generatorESPEnabled = false
local camera = workspace.CurrentCamera
local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")
local survivorsFolder = workspace:WaitForChild("Players"):WaitForChild("Survivors")
local ingame = workspace:WaitForChild("Map"):WaitForChild("Ingame")

-- Các Hàm ESP (Tối thiểu cần thiết để UI không lỗi)
local function attachBillboard(model, color) 
    local head = model:FindFirstChild("Head") or model:FindFirstChildWhichIsA("BasePart")
    if not head or model:FindFirstChild("ESP_NameBillboard") then return end
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_NameBillboard"
    billboard.Adornee = head
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.Parent = model
    local label = Instance.new("TextLabel")
    label.Name = "NameLabel"
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = color
    label.TextStrokeTransparency = 0
    label.TextSize = 10
    label.Font = Enum.Font.GothamBold
    label.Text = model:GetAttribute("ActorDisplayName") or "Player"
    label.Parent = billboard
end
local function updateBillboardText(model) 
    local billboard = model:FindFirstChild("ESP_NameBillboard")
    if not billboard then return end
    local label = billboard:FindFirstChild("NameLabel")
    if label then
        local actorText = model:GetAttribute("ActorDisplayName") or "???"
        local humanoid = model:FindFirstChildOfClass("Humanoid")
        local hp = humanoid and math.floor(humanoid.Health) or 100
        label.Text = string.format("%s (HP: %d)", actorText, hp)
    end
end
local function setupModel(model, isKiller)
    if not model:IsA("Model") or not model:FindFirstChildOfClass("Humanoid") then return end
    local color = isKiller and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(255, 255, 0)
    attachBillboard(model, color)
    if not model:FindFirstChild("ESP_Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.FillTransparency = 1
        highlight.OutlineTransparency = 0
        highlight.OutlineColor = color
        highlight.Adornee = model
        highlight.Parent = model
    end
    model:GetAttributeChangedSignal("ActorDisplayName"):Connect(function() updateBillboardText(model) end)
    local humanoid = model:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid:GetPropertyChangedSignal("Health"):Connect(function() updateBillboardText(model) end) end
end
local function scanFolder(folder, isKiller) 
    for _, model in ipairs(folder:GetChildren()) do setupModel(model, isKiller) end
end

-- Hàm Chức năng ESP (giữ lại định nghĩa để tránh lỗi)
local function enableItemESP() end
local function disableItemESP() end
local function startGeneratorESP() end
local function stopGeneratorESP() end
local function isDispenser(model) return model:IsA("Model") and model.Name:lower():find("dispenser") end
local function isSentry(model) return model:IsA("Model") and model.Name:lower():find("sentry") end
local function CustomESP_isTripware(model) return model:IsA("Model") and model.Name:find("TaphTripwire") ~= nil end
local function CustomESP_isSubspace(model) return model:IsA("Model") and model.Name == "SubspaceTripmine" end
local function createDispenserESP(part) end
local function createSentryESP(part) end
local function CustomESP_createTripwareESP(part) end
local function CustomESP_createSubspaceESP(part) end
local function removeESPByNamePattern(parent, pattern) for _, child in ipairs(parent:GetChildren()) do if child.Name:find(pattern) then child:Destroy() end end end
function EnableDispenserESP() _G.DispenserESPEnabled = true end
function DisableDispenserESP() _G.DispenserESPEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and isDispenser(part.Parent) then removeESPByNamePattern(part, "_PESP") removeESPByNamePattern(part, "BillboardESP") end end end
function EnableSentryESP() _G.SentryESPEnabled = true end
function DisableSentryESP() _G.SentryESPEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and isSentry(part.Parent) then removeESPByNamePattern(part, "_PESP") removeESPByNamePattern(part, "BillboardESP") end end end
function EnableTripwareESP() _G.CustomESP_TripwareEnabled = true end
function DisableTripwareESP() _G.CustomESP_TripwareEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and CustomESP_isTripware(part.Parent) then removeESPByNamePattern(part, "_CustomESP_PESP") removeESPByNamePattern(part, "CustomESP_BillboardESP") end end end
function EnableSubspaceESP() _G.CustomESP_SubspaceEnabled = true end
function DisableSubspaceESP() _G.CustomESP_SubspaceEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and CustomESP_isSubspace(part.Parent) then removeESPByNamePattern(part, "_CustomESP_PESP") removeESPByNamePattern(part, "CustomESP_BillboardESP") end end end

-- Lặp Player ESP
task.spawn(function()
	while true do
		scanFolder(killersFolder, true)
		scanFolder(survivorsFolder, false)
		task.wait(5)
	end
end)
-- Lặp Render ESP (Visibility/Scale)
RunService.RenderStepped:Connect(function()
	for _, folderData in pairs({
		{folder = killersFolder, toggle = killersESPToggle},
		{folder = survivorsFolder, toggle = survivorsESPToggle},
	}) do
		for _, model in ipairs(folderData.folder:GetChildren()) do
			local bb = model:FindFirstChild("ESP_NameBillboard")
			local hl = model:FindFirstChild("ESP_Highlight")
			if bb then bb.Enabled = folderData.toggle end
			if hl then hl.Enabled = folderData.toggle end
		end
	end
end)
-- Lặp Builderman/Taph ESP
task.spawn(function()
	while true do
		local parts = ingame:GetDescendants()
		for _, part in ipairs(parts) do
			local parent = part.Parent
			if not parent then continue end
			if _G.DispenserESPEnabled and isDispenser(parent) then createDispenserESP(part) end
			if _G.SentryESPEnabled and isSentry(parent) then createSentryESP(part) end
			if _G.CustomESP_TripwareEnabled and CustomESP_isTripware(parent) then CustomESP_createTripwareESP(part) end
			if _G.CustomESP_SubspaceEnabled and CustomESP_isSubspace(parent) then CustomESP_createSubspaceESP(part) end
		end
		task.wait(0.5) 
	end
end)

-- UI ESP
ESTab:AddSection("Main ESP")
ESTab:AddToggle("KillersESP", { Title = "Killers ESP", Default = killersESPToggle, }):OnChange(function(Value) killersESPToggle = Value end)
ESTab:AddToggle("SurvivorsESP", { Title = "Survivors ESP", Default = survivorsESPToggle, }):OnChange(function(Value) survivorsESPToggle = Value end)
ESTab:AddToggle("ItemESP_Toggle", { Title = "Items ESP", Default = itemESPEnabled, }):OnChange(function(Value) itemESPEnabled = Value if itemESPEnabled then enableItemESP() else disableItemESP() end end)
ESTab:AddToggle("GeneratorsESP", { Title = "Generators ESP", Default = generatorESPEnabled, }):OnChange(function(Value) generatorESPEnabled = Value if Value then startGeneratorESP() else stopGeneratorESP() end end)
ESTab:AddSection("Builderman ESP")
_G.DispenserESPEnabled = false
_G.SentryESPEnabled = false
ESTab:AddToggle("ToggleBuilderDispenserESP", { Title = "Dispenser ESP", Default = _G.DispenserESPEnabled, }):OnChange(function(v) if v then EnableDispenserESP() else DisableDispenserESP() end end)
ESTab:AddToggle("ToggleBuilderSentryESP", { Title = "Sentry ESP", Default = _G.SentryESPEnabled, }):OnChange(function(v) if v then EnableSentryESP() else DisableSentryESP() end end)
ESTab:AddSection("Taph ESP")
_G.CustomESP_TripwareEnabled = false
_G.CustomESP_SubspaceEnabled = false
ESTab:AddToggle("ToggleBuilderTripwareESP", { Title = "Tripwire ESP", Default = _G.CustomESP_TripwareEnabled, }):OnChange(function(v) if v then EnableTripwareESP() else DisableTripwareESP() end end)
ESTab:AddToggle("ToggleBuilderSubspaceESP", { Title = "Subspace Tripmine ESP", Default = _G.CustomESP_SubspaceEnabled, }):OnChange(function(v) if v then EnableSubspaceESP() else DisableSubspaceESP() end end)


-- =============================================
-- == LOGIC & UI: AIMBOT ==
-- =============================================

-- Config Aimbot (Khởi tạo biến Global)
getgenv().AimbotConfig = getgenv().AimbotConfig or {}
getgenv().AimbotConfig.Slash = getgenv().AimbotConfig.Slash or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 2 }
getgenv().AimbotConfig.Shoot = getgenv().AimbotConfig.Shoot or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 1.5 }
getgenv().AimbotConfig.Punch = getgenv().AimbotConfig.Punch or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 1.5 }
getgenv().AimbotConfig.TrueShoot = getgenv().AimbotConfig.TrueShoot or { Enabled = false, Smoothness = 1, Prediction = 0.6, Duration = 1.5 }
getgenv().AimbotConfig.ThrowPizza = getgenv().AimbotConfig.ThrowPizza or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 1.5 }
getgenv().AimbotConfig.Killers = getgenv().AimbotConfig.Killers or { Enabled = false, Duration = 3 }
getgenv().AimbotConfig.Mode = getgenv().AimbotConfig.Mode or "Aimlock" 

AimbotTab:AddSection("Shedletsky (Slash)")
AimbotTab:AddToggle("AutoAimSlash", { Title = "Aimbot Slash", Default = getgenv().AimbotConfig.Slash.Enabled, }):OnChange(function(Value) getgenv().AimbotConfig.Slash.Enabled = Value end)
AimbotTab:AddSlider("SmoothnessSlash", { Title = "Smoothness Slash", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.Slash.Smoothness * 100, }):OnChange(function(Value) getgenv().AimbotConfig.Slash.Smoothness = Value / 100 end)
AimbotTab:AddSlider("PredictionSlash", { Title = "Prediction Slash", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.Slash.Prediction, }):OnChange(function(Value) getgenv().AimbotConfig.Slash.Prediction = Value end)

AimbotTab:AddSection("Chance (One Shot)")
AimbotTab:AddToggle("AutoAimShoot", { Title = "Aimbot One Shot", Default = getgenv().AimbotConfig.Shoot.Enabled, }):OnChange(function(Value) getgenv().AimbotConfig.Shoot.Enabled = Value end)
AimbotTab:AddSlider("SmoothnessShoot", { Title = "Smoothness One Shot", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.Shoot.Smoothness * 100, }):OnChange(function(Value) getgenv().AimbotConfig.Shoot.Smoothness = Value / 100 end)
AimbotTab:AddSlider("PredictionShoot", { Title = "Prediction One Shot", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.Shoot.Prediction, }):OnChange(function(Value) getgenv().AimbotConfig.Shoot.Prediction = Value end)

AimbotTab:AddSection("Chance (True One Shot)")
AimbotTab:AddParagraph("True One Shot Aimbot", "For Chance True One Shot Only")
AimbotTab:AddToggle("AutoAimTrueShoot", { Title = "Aimbot True One Shot", Default = getgenv().AimbotConfig.TrueShoot.Enabled, }):OnChange(function(Value) getgenv().AimbotConfig.TrueShoot.Enabled = Value end)
AimbotTab:AddSlider("SmoothnessTrueShoot", { Title = "Smoothness True One Shot", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.TrueShoot.Smoothness * 100, }):OnChange(function(Value) getgenv().AimbotConfig.TrueShoot.Smoothness = Value / 100 end)
AimbotTab:AddSlider("PredictionTrueShoot", { Title = "Prediction True One Shot", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.TrueShoot.Prediction, }):OnChange(function(Value) getgenv().AimbotConfig.TrueShoot.Prediction = Value end)

AimbotTab:AddSection("Guest 1337 (Punch)")
AimbotTab:AddToggle("AutoAimPunch", { Title = "Aimbot Punch", Default = getgenv().AimbotConfig.Punch.Enabled, }):OnChange(function(Value) getgenv().AimbotConfig.Punch.Enabled = Value end)
AimbotTab:AddSlider("SmoothnessPunch", { Title = "Smoothness Punch", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.Punch.Smoothness * 100, }):OnChange(function(Value) getgenv().AimbotConfig.Punch.Smoothness = Value / 100 end)
AimbotTab:AddSlider("PredictionPunch", { Title = "Prediction Punch", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.Punch.Prediction, }):OnChange(function(Value) getgenv().AimbotConfig.Punch.Prediction = Value end)

AimbotTab:AddSection("Elliot (Throw Pizza)")
AimbotTab:AddToggle("AutoAimThrowPizza", { Title = "Aimbot Throw Pizza", Default = getgenv().AimbotConfig.ThrowPizza.Enabled, }):OnChange(function(Value) getgenv().AimbotConfig.ThrowPizza.Enabled = Value end)
AimbotTab:AddSlider("SmoothnessThrowPizza", { Title = "Smoothness Throw Pizza", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.ThrowPizza.Smoothness * 100, }):OnChange(function(Value) getgenv().AimbotConfig.ThrowPizza.Smoothness = Value / 100 end)
AimbotTab:AddSlider("PredictionThrowPizza", { Title = "Prediction Throw Pizza", Range = {0, 2}, Increment = 0.2, Suffix = "s", Default = getgenv().AimbotConfig.ThrowPizza.Prediction, }):OnChange(function(Value) getgenv().AimbotConfig.ThrowPizza.Prediction = Value end)

AimbotTab:AddSection("Killers")
AimbotTab:AddToggle("EnableAimbotAll", { Title = "Killers's Aimbot", Default = getgenv().AimbotConfig.Killers.Enabled, }):OnChange(function(Value) getgenv().AimbotConfig.Killers.Enabled = Value end)

AimbotTab:AddSection("AimMode")
AimbotTab:AddDropdown("AimModeSelect", { Title = "Aim Mode", Options = {"Aimbot", "RootPart"}, Default = getgenv().AimbotConfig.Mode, }):OnChange(function(Value) getgenv().AimbotConfig.Mode = Value[1] end)
