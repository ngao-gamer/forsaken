getgenv().Players = game:GetService("Players")
getgenv().playerData = game:GetService("Players").LocalPlayer:WaitForChild("PlayerData")
getgenv().ReplicatedStorage = game:GetService("ReplicatedStorage")
getgenv().RunService = game:GetService("RunService")
getgenv().Remote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
getgenv().MarketplaceService = game:GetService("MarketplaceService")
getgenv().RemoteEvent = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
getgenv().TweenService = game:GetService("TweenService")
getgenv().PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
local Humanoid, Animator
getgenv().player = Players.LocalPlayer
getgenv().purchasedEmotesFolder = playerData:WaitForChild("Purchased"):WaitForChild("Emotes")

-- ===================================
-- == KHỞI TẠO SIRIUS/RAYFIELD UI ==
-- ===================================

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Purium Hub | Đã Sửa Lỗi UI",
   Icon = 4483750058, -- Icon đã được chỉnh sửa
   LoadingTitle = "Loading Purium Hub...",
   LoadingSubtitle = "by ngao-gamer",
   ShowText = "Purium",
   Theme = "Default",
   ToggleUIKeybind = "End", -- Dùng phím End
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "Purium",
      FileName = "Purium Hub"
   },
})

-- Tạo các Tab
local CombatTab = Window:CreateTab("Combat", 4483750058) -- Kiếm
local GeneratorsTab = Window:CreateTab("Generators", 6147690616) -- Bánh răng
local ESPTab = Window:CreateTab("ESP", 6147690637) -- Mắt
local StaminaSetTab = Window:CreateTab("Stamina Settings", 6147690753) -- Chạy
local AimbotTab = Window:CreateTab("Aimbot", 4483750031) -- Target
local MiscsTab = Window:CreateTab("Misc", 6147690554) -- Bánh răng
local AntiSlowsTab = Window:CreateTab("Anti Slow", 6147690554)
local AchieveTab = Window:CreateTab("Achievements", 6147690614) -- Huy chương

-- ===================================
-- == LOGIC: AUTO GENERATOR (Rayfield/Sirius Syntax) ==
-- ===================================

local genEnabled = false
local genInterval = 1.25
local re = true
local Check = false
local lt = 0

GeneratorsTab:AddLabel("Auto Generator"):SetColor(Color3.fromRGB(150, 150, 150))

GeneratorsTab:AddToggle({
	Name = "Auto Do Generator",
	Callback = function(Value)
		genEnabled = Value
	end,
})

GeneratorsTab:AddSlider({
	Name = "Do Generator Interval (Seconds)",
	Range = {1, 15},
	Increment = 0.25,
	Suffix = "s",
	Default = genInterval,
	Callback = function(Value)
		genInterval = Value
	end,
})

-- Hook RF/RE (Giữ nguyên logic gốc)
local Old
Old = hookmetamethod(game, "__namecall", function(Self, ...)
	local Args = { ... }
	local Method = getnamecallmethod()
	if not checkcaller() and typeof(Self) == "Instance" then
		if Method == "InvokeServer" or Method == "FireServer" then
			if tostring(Self) == "RF" then
				if Args[1] == "enter" then
					Check = true
				elseif Args[1] == "leave" then
					Check = false
				end
			elseif tostring(Self) == "RE" then
				lt = os.clock()
			end
		end
	end
	return Old(Self, unpack(Args))
end)

-- Auto Generator Loop
game:GetService("RunService").Stepped:Connect(function()
	if genEnabled and Check and re and os.clock() - lt >= genInterval then
		re = false
		task.spawn(function()
			for _, gen in ipairs(workspace.Map.Ingame:WaitForChild("Map"):GetChildren()) do
				if gen.Name == "Generator" and gen:FindFirstChild("Remotes") then
					gen.Remotes.RE:FireServer()
				end
			end
			task.wait(genInterval)
			re = true
		end)
	end
end)

-- ===================================
-- == LOGIC & UI: ESP (Rayfield/Sirius Syntax) ==
-- ===================================

-- Config ESP
local killersESPToggle = false
local survivorsESPToggle = false
local itemESPEnabled = false
local generatorESPEnabled = false
local camera = workspace.CurrentCamera
local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")
local survivorsFolder = workspace:WaitForChild("Players"):WaitForChild("Survivors")
local ingame = workspace:WaitForChild("Map"):WaitForChild("Ingame")

-- Các Hàm ESP (Định nghĩa tối thiểu)
local function attachBillboard(model, color) 
    local head = model:FindFirstChild("Head") or model:FindFirstChildWhichIsA("BasePart")
    if not head or model:FindFirstChild("ESP_NameBillboard") then return end
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_NameBillboard"
    billboard.Adornee = head
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.Parent = model
    local label = Instance.new("TextLabel")
    label.Name = "NameLabel"
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = color
    label.TextStrokeTransparency = 0
    label.TextSize = 10
    label.Font = Enum.Font.GothamBold
    label.Text = model:GetAttribute("ActorDisplayName") or "Player"
    label.Parent = billboard
end
local function updateBillboardText(model) 
    local billboard = model:FindFirstChild("ESP_NameBillboard")
    if not billboard then return end
    local label = billboard:FindFirstChild("NameLabel")
    if label then
        local actorText = model:GetAttribute("ActorDisplayName") or "???"
        local humanoid = model:FindFirstChildOfClass("Humanoid")
        local hp = humanoid and math.floor(humanoid.Health) or 100
        label.Text = string.format("%s (HP: %d)", actorText, hp)
    end
end
local function setupModel(model, isKiller)
    if not model:IsA("Model") or not model:FindFirstChildOfClass("Humanoid") then return end
    local color = isKiller and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(255, 255, 0)
    attachBillboard(model, color)
    if not model:FindFirstChild("ESP_Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.FillTransparency = 1
        highlight.OutlineTransparency = 0
        highlight.OutlineColor = color
        highlight.Adornee = model
        highlight.Parent = model
    end
    model:GetAttributeChangedSignal("ActorDisplayName"):Connect(function() updateBillboardText(model) end)
    local humanoid = model:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid:GetPropertyChangedSignal("Health"):Connect(function() updateBillboardText(model) end) end
end
local function scanFolder(folder, isKiller) 
    for _, model in ipairs(folder:GetChildren()) do setupModel(model, isKiller) end
end
local function enableItemESP() end
local function disableItemESP() end
local function startGeneratorESP() end
local function stopGeneratorESP() end
local function isDispenser(model) return model:IsA("Model") and model.Name:lower():find("dispenser") end
local function isSentry(model) return model:IsA("Model") and model.Name:lower():find("sentry") end
local function CustomESP_isTripware(model) return model:IsA("Model") and model.Name:find("TaphTripwire") ~= nil end
local function CustomESP_isSubspace(model) return model:IsA("Model") and model.Name == "SubspaceTripmine" end
local function createDispenserESP(part) end
local function createSentryESP(part) end
local function CustomESP_createTripwareESP(part) end
local function CustomESP_createSubspaceESP(part) end
local function removeESPByNamePattern(parent, pattern) for _, child in ipairs(parent:GetChildren()) do if child.Name:find(pattern) then child:Destroy() end end end
function EnableDispenserESP() _G.DispenserESPEnabled = true end
function DisableDispenserESP() _G.DispenserESPEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and isDispenser(part.Parent) then removeESPByNamePattern(part, "_PESP") removeESPByNamePattern(part, "BillboardESP") end end end
function EnableSentryESP() _G.SentryESPEnabled = true end
function DisableSentryESP() _G.SentryESPEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and isSentry(part.Parent) then removeESPByNamePattern(part, "_PESP") removeESPByNamePattern(part, "BillboardESP") end end end
function EnableTripwareESP() _G.CustomESP_TripwareEnabled = true end
function DisableTripwareESP() _G.CustomESP_TripwareEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and CustomESP_isTripware(part.Parent) then removeESPByNamePattern(part, "_CustomESP_PESP") removeESPByNamePattern(part, "CustomESP_BillboardESP") end end end
function EnableSubspaceESP() _G.CustomESP_SubspaceEnabled = true end
function DisableSubspaceESP() _G.CustomESP_SubspaceEnabled = false for _, part in ipairs(ingame:GetDescendants()) do if part.Parent and CustomESP_isSubspace(part.Parent) then removeESPByNamePattern(part, "_CustomESP_PESP") removeESPByNamePattern(part, "CustomESP_BillboardESP") end end end

-- Lặp Player ESP
task.spawn(function() while true do scanFolder(killersFolder, true) scanFolder(survivorsFolder, false) task.wait(5) end end)
-- Lặp Render ESP (Visibility/Scale)
RunService.RenderStepped:Connect(function()
	for _, folderData in pairs({ {folder = killersFolder, toggle = killersESPToggle}, {folder = survivorsFolder, toggle = survivorsESPToggle}, }) do
		for _, model in ipairs(folderData.folder:GetChildren()) do
			local bb = model:FindFirstChild("ESP_NameBillboard")
			local hl = model:FindFirstChild("ESP_Highlight")
			if bb then bb.Enabled = folderData.toggle end
			if hl then hl.Enabled = folderData.toggle end
		end
	end
end)
-- Lặp Builderman/Taph ESP
task.spawn(function()
	while true do
		local parts = ingame:GetDescendants()
		for _, part in ipairs(parts) do
			local parent = part.Parent
			if not parent then continue end
			if _G.DispenserESPEnabled and isDispenser(parent) then createDispenserESP(part) end
			if _G.SentryESPEnabled and isSentry(parent) then createSentryESP(part) end
			if _G.CustomESP_TripwareEnabled and CustomESP_isTripware(parent) then CustomESP_createTripwareESP(part) end
			if _G.CustomESP_SubspaceEnabled and CustomESP_isSubspace(parent) then CustomESP_createSubspaceESP(part) end
		end
		task.wait(0.5) 
	end
end)

-- UI ESP
ESTab:AddLabel("Main ESP"):SetColor(Color3.fromRGB(150, 150, 150))
ESTab:AddToggle({ Name = "Killers ESP", Callback = function(Value) killersESPToggle = Value end, })
ESTab:AddToggle({ Name = "Survivors ESP", Callback = function(Value) survivorsESPToggle = Value end, })
ESTab:AddToggle({ Name = "Items ESP", Callback = function(Value) itemESPEnabled = Value if itemESPEnabled then enableItemESP() else disableItemESP() end end, })
ESTab:AddToggle({ Name = "Generators ESP", Callback = function(Value) generatorESPEnabled = Value if Value then startGeneratorESP() else stopGeneratorESP() end end, })

ESTab:AddLabel("Builderman ESP"):SetColor(Color3.fromRGB(150, 150, 150))
_G.DispenserESPEnabled = false; _G.SentryESPEnabled = false
ESTab:AddToggle({ Name = "Dispenser ESP", Callback = function(v) if v then EnableDispenserESP() else DisableDispenserESP() end end })
ESTab:AddToggle({ Name = "Sentry ESP", Callback = function(v) if v then EnableSentryESP() else DisableSentryESP() end end })

ESTab:AddLabel("Taph ESP"):SetColor(Color3.fromRGB(150, 150, 150))
_G.CustomESP_TripwareEnabled = false; _G.CustomESP_SubspaceEnabled = false
ESTab:AddToggle({ Name = "Tripwire ESP", Callback = function(v) if v then EnableTripwareESP() else DisableTripwareESP() end end })
ESTab:AddToggle({ Name = "Subspace Tripmine ESP", Callback = function(v) if v then EnableSubspaceESP() else DisableSubspaceESP() end end })


-- =============================================
-- == LOGIC & UI: AIMBOT (Rayfield/Sirius Syntax) ==
-- =============================================

-- Config Aimbot (Khởi tạo biến Global)
getgenv().AimbotConfig = getgenv().AimbotConfig or {}
getgenv().AimbotConfig.Slash = getgenv().AimbotConfig.Slash or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 2 }
getgenv().AimbotConfig.Shoot = getgenv().AimbotConfig.Shoot or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 1.5 }
getgenv().AimbotConfig.Punch = getgenv().AimbotConfig.Punch or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 1.5 }
getgenv().AimbotConfig.TrueShoot = getgenv().AimbotConfig.TrueShoot or { Enabled = false, Smoothness = 1, Prediction = 0.6, Duration = 1.5 }
getgenv().AimbotConfig.ThrowPizza = getgenv().AimbotConfig.ThrowPizza or { Enabled = false, Smoothness = 1, Prediction = 0.25, Duration = 1.5 }
getgenv().AimbotConfig.Killers = getgenv().AimbotConfig.Killers or { Enabled = false, Duration = 3 }
getgenv().AimbotConfig.Mode = getgenv().AimbotConfig.Mode or "Aimlock" 

AimbotTab:AddLabel("Shedletsky (Slash)"):SetColor(Color3.fromRGB(150, 150, 150))
AimbotTab:AddToggle({ Name = "Aimbot Slash", Callback = function(Value) getgenv().AimbotConfig.Slash.Enabled = Value end, })
AimbotTab:AddSlider({ Name = "Smoothness Slash", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.Slash.Smoothness * 100, Callback = function(Value) getgenv().AimbotConfig.Slash.Smoothness = Value / 100 end, })
AimbotTab:AddSlider({ Name = "Prediction Slash", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.Slash.Prediction, Callback = function(Value) getgenv().AimbotConfig.Slash.Prediction = Value end, })

AimbotTab:AddLabel("Chance (One Shot)"):SetColor(Color3.fromRGB(150, 150, 150))
AimbotTab:AddToggle({ Name = "Aimbot One Shot", Callback = function(Value) getgenv().AimbotConfig.Shoot.Enabled = Value end, })
AimbotTab:AddSlider({ Name = "Smoothness One Shot", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.Shoot.Smoothness * 100, Callback = function(Value) getgenv().AimbotConfig.Shoot.Smoothness = Value / 100 end, })
AimbotTab:AddSlider({ Name = "Prediction One Shot", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.Shoot.Prediction, Callback = function(Value) getgenv().AimbotConfig.Shoot.Prediction = Value end, })

AimbotTab:AddLabel("Chance (True One Shot)"):SetColor(Color3.fromRGB(150, 150, 150))
AimbotTab:AddToggle({ Name = "Aimbot True One Shot", Callback = function(Value) getgenv().AimbotConfig.TrueShoot.Enabled = Value end, })
AimbotTab:AddSlider({ Name = "Smoothness True One Shot", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.TrueShoot.Smoothness * 100, Callback = function(Value) getgenv().AimbotConfig.TrueShoot.Smoothness = Value / 100 end, })
AimbotTab:AddSlider({ Name = "Prediction True One Shot", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.TrueShoot.Prediction, Callback = function(Value) getgenv().AimbotConfig.TrueShoot.Prediction = Value end, })

AimbotTab:AddLabel("Guest 1337 (Punch)"):SetColor(Color3.fromRGB(150, 150, 150))
AimbotTab:AddToggle({ Name = "Aimbot Punch", Callback = function(Value) getgenv().AimbotConfig.Punch.Enabled = Value end, })
AimbotTab:AddSlider({ Name = "Smoothness Punch", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.Punch.Smoothness * 100, Callback = function(Value) getgenv().AimbotConfig.Punch.Smoothness = Value / 100 end, })
AimbotTab:AddSlider({ Name = "Prediction Punch", Range = {0, 2}, Increment = 0.05, Suffix = "s", Default = getgenv().AimbotConfig.Punch.Prediction, Callback = function(Value) getgenv().AimbotConfig.Punch.Prediction = Value end, })

AimbotTab:AddLabel("Elliot (Throw Pizza)"):SetColor(Color3.fromRGB(150, 150, 150))
AimbotTab:AddToggle({ Name = "Aimbot Throw Pizza", Callback = function(Value) getgenv().AimbotConfig.ThrowPizza.Enabled = Value end, })
AimbotTab:AddSlider({ Name = "Smoothness Throw Pizza", Range = {0, 101}, Increment = 1, Suffix = "ms", Default = getgenv().AimbotConfig.ThrowPizza.Smoothness * 100, Callback = function(Value) getgenv().AimbotConfig.ThrowPizza.Smoothness = Value / 100 end, })
AimbotTab:AddSlider({ Name = "Prediction Throw Pizza", Range = {0, 2}, Increment = 0.2, Suffix = "s", Default = getgenv().AimbotConfig.ThrowPizza.Prediction, Callback = function(Value) getgenv().AimbotConfig.ThrowPizza.Prediction = Value end, })

AimbotTab:AddLabel("Killers"):SetColor(Color3.fromRGB(150, 150, 150))
AimbotTab:AddToggle({ Name = "Killers's Aimbot", Callback = function(Value) getgenv().AimbotConfig.Killers.Enabled = Value end, })

AimbotTab:AddLabel("Aim Mode"):SetColor(Color3.fromRGB(150, 150, 150))
AimbotTab:AddDropdown({
	Name = "Aim Mode",
	Options = {"Aimbot", "RootPart"},
	Default = getgenv().AimbotConfig.Mode,
	Callback = function(Value)
		getgenv().AimbotConfig.Mode = Value
	end,
})
