getgenv().Players = game:GetService("Players")
getgenv().playerData = game:GetService("Players").LocalPlayer:WaitForChild("PlayerData")
getgenv().ReplicatedStorage = game:GetService("ReplicatedStorage")

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
   Title = "Purium Hub | Debug Check",
   ThemeIndex = 3,
   AccentColor = "Cyan",
   ConfigurationSaving = { Enabled = true, FolderName = "Purium", FileName = "Purium Hub" },
   MinimizeKey = Enum.KeyCode.End 
})

-- Tạo các Tab (chỉ để kiểm tra)
local CombatTab = Window:AddTab("Combat", 4483750058)
local GeneratorsTab = Window:AddTab("Generators", 6147690616)
local ESPTab = Window:AddTab("ESP", 6147690637)
local AimbotTab = Window:AddTab("Aimbot", 4483750031)

-- LOGIC AUTO GENERATOR
local genEnabled = false
local genInterval = 1.25
local re = true
local Check = false
local lt = 0

GeneratorsTab:AddSection("Auto Generator")
GeneratorsTab:AddToggle("AutoGenToggle", { Title = "Auto Do Generator", Default = genEnabled, }):OnChange(function(Value) genEnabled = Value end)
GeneratorsTab:AddSlider("GenIntervalSlider", { Title = "Do Generator Interval (Seconds)", Range = {1, 15}, Increment = 0.25, Suffix = "s", Default = genInterval, }):OnChange(function(Value) genInterval = Value end)

local Old
Old = hookmetamethod(game, "__namecall", function(Self, ...)
	local Args = { ... }
	local Method = getnamecallmethod()
	if not checkcaller() and typeof(Self) == "Instance" then
		if Method == "InvokeServer" or Method == "FireServer" then
			if tostring(Self) == "RF" then
				if Args[1] == "enter" then
					Check = true
				elseif Args[1] == "leave" then
					Check = false
				end
			elseif tostring(Self) == "RE" then
				lt = os.clock()
			end
		end
	end
	return Old(Self, unpack(Args))
end)

game:GetService("RunService").Stepped:Connect(function()
	if genEnabled and Check and re and os.clock() - lt >= genInterval then
		re = false
		task.spawn(function()
			for _, gen in ipairs(workspace.Map.Ingame:WaitForChild("Map"):GetChildren()) do
				if gen.Name == "Generator" and gen:FindFirstChild("Remotes") then
					gen.Remotes.RE:FireServer()
				end
			end
			task.wait(genInterval)
			re = true
		end)
	end
end)
